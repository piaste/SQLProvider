<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright (c) Microsoft Corporation.  All Rights Reserved.  See License.txt in the project root for license information. -->
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
    <Import Project="netfx.props" />
    <PropertyGroup>
        <!-- Can build: -->
        <!-- <TargetFrameworks>net461;netcoreapp2.1;netstandard2.0</TargetFrameworks> -->
        <!-- Lets use: -->
        <TargetFrameworks>netstandard2.0</TargetFrameworks>
        <DefineConstants>NETSTANDARD;NO_GENERATIVE</DefineConstants>
        <AllowCrossTargeting>true</AllowCrossTargeting>
        <OutputPath>..\..\bin</OutputPath>
        <PublishRepositoryUrl>true</PublishRepositoryUrl>
        <EmbedUntrackedSources>true</EmbedUntrackedSources>
        <AllowedOutputExtensionsInPackageBuildOutputFolder>$(AllowedOutputExtensionsInPackageBuildOutputFolder);.pdb</AllowedOutputExtensionsInPackageBuildOutputFolder>
        <Optimize>true</Optimize>
        <Tailcalls>true</Tailcalls>
        <DisableImplicitFSharpCoreReference>true</DisableImplicitFSharpCoreReference>
        <RestoreProjectStyle>PackageReference</RestoreProjectStyle>
        <CopyLocalLockFileAssemblies>true</CopyLocalLockFileAssemblies>
        <Configuration/>
        <!--<NuspecFile>$(AssemblyName).nuspec</NuspecFile>-->
    </PropertyGroup>
    <ItemGroup>
        <None Include="paket.references" />
        <Compile Include="AssemblyInfo.fs" />
    </ItemGroup>
    <ItemGroup>
        <ProjectReference Include="..\SQLProvider\SqlProvider.fsproj" />
    </ItemGroup>
    <ItemGroup>
        <!-- These files are the facades necessary to run .NET Standard 2.0 components on .NET Framework 4.6.1 (.NET Framework 4.7 will -->
        <!-- come with these facades included). Because the type provider is a .NET Standard 2.0 component, the deployment of the type -->
        <!--  provider must include these facade DLLs if it is to run hosted inside an F# compiler executing using  .NET Framework 4.6.1 or Mono 5.0. -->  

        <None Condition="Exists('..\..\packages\NETStandard.Library.NETFramework\build\net461\lib\netstandard.dll')" Include="..\..\packages\NETStandard.Library.NETFramework\build\net461\lib\netstandard.dll">
            <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
        </None>
        <None Condition="Exists('..\..\packages\NETStandard.Library.NETFramework\build\net461\lib\System.Reflection.dll')" Include="..\..\packages\NETStandard.Library.NETFramework\build\net461\lib\System.Reflection.dll">
            <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
        </None>
        <None Condition="Exists('..\..\packages\NETStandard.Library.NETFramework\build\net461\lib\System.Runtime.dll')" Include="..\..\packages\NETStandard.Library.NETFramework\build\net461\lib\System.Runtime.dll">
            <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
        </None>
    </ItemGroup>
    <Target Name="AfterBuild">
        <!-- Note: BasicProvider.DesignTime.fsproj must have been built before this project -->

        <!-- We place BOTH the net461 and netstandard2.0 design-time DLLs in well-known locations with resepct to the runtime DLL -->
        <!-- This enables any runtime DLL to be used with any host tooling running in either netcoreapp2.0+ or net461+ -->
        <Copy SourceFiles="..\$(AssemblyName)\bin\$(Configuration)\net461\$(AssemblyName).dll" DestinationFolder="$(OutputPath)\typeproviders\fsharp41\net461" />
        <Copy SourceFiles="..\$(AssemblyName)\bin\$(Configuration)\netstandard2.0\$(AssemblyName).dll" DestinationFolder="$(OutputPath)\typeproviders\fsharp41\netstandard2.0" />

        <!-- We also place the net461 design-time DLLs alongside the runtime DLL for loading by legacy F# toolchains -->
        <Copy SourceFiles="..\$(AssemblyName)\bin\$(Configuration)\net461\$(AssemblyName).dll" DestinationFolder="$(OutputPath)" Condition="'$(TargetFramework)' == 'net461'" />
    </Target>
</Project>